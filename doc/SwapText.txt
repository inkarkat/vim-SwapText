*SwapText.txt*          Mappings to exchange text with the previously deleted text.

			 SWAP TEXT    by Ingo Karkat
								*SwapText.vim*
description			|SwapText-description|
usage				|SwapText-usage|
installation			|SwapText-installation|
limitations			|SwapText-limitations|
known problems			|SwapText-known-problems|
todo				|SwapText-todo|
history				|SwapText-history|

==============================================================================
DESCRIPTION						*SwapText-description*

Swapping text areas when there's other text in between (e.g. function
arguments separated by other arguments) is done frequently, yet cumbersome.
One way to do this is by deleting A, selecting B, pasting over it, then going
back to where A used to be and pasting the original B.

This plugin lets you exchange the current selection / line / text covered by a
motion with the previously deleted text, with a short and simple mapping. The
swap can be undone as a single action.

SOURCE									     *

Based on vimtip #470: Map to quickly swap/exchange arbitrary text by Piet
Delport and an enhancement by ad_scriven@postmaster.co.uk.
    http://vim.wikia.com/wiki/Swapping_characters,_words_and_lines

SEE ALSO								     *

- The |LineJuggler.vim| plugin (vimscript #4140) provides [E / ]E mappings to
  swap lines / the selection with the same amount of visible lines located
  [count] above / below.
- The |LineJugglerCommands.vim| plugin (vimscript #4465) provides swapping of
  ranges as an Ex |:Swap| command.

RELATED WORKS								     *

- visswap.vim (http://www.drchip.org/astronaut/vim/vbafiles/visswap.vba.gz)
  uses a visual selection, <C-y>, another selection, <C-x> to swap the two.
- swapstrings.vim (http://www.drchip.org/astronaut/vim/#SWAPSTRINGS) can swap
  all instances of two strings in a range.
- swap.vim (vimscript #3250) can swap around a pivot (e.g. ==) or to WORDs to
  the left / right with <Leader>x / <Leader>X.
- exchange (https://github.com/tommcdo/vim-exchange) defines a cx{motion}
  operator that has to be used twice to exchange the first with the second
  one.

==============================================================================
USAGE							      *SwapText-usage*

First, delete some text (using any normal Vim command, such as "daw",
{Visual}x, or "dt"). Then, visually select some other text, and press
<Leader>x, or use the custom operator <Leader>x{motion}. The two pieces of
text should now be swapped.

			    *v_<Leader>x* *<Leader>x* *<Leader>xx* *<Leader>X*
{Visual}<Leader>x	Swap the visual selection with the just deleted text.
<Leader>x{motion}	Swap the characters covered by {motion} with the just
			deleted text.
[count]<Leader>xx	Swap the current [count] line(s) with the just deleted
			text.
[count]<Leader>X	Swap the characters under the cursor until the end of
			the line and [count]-1 more lines with the just
			deleted text.

==============================================================================
INSTALLATION					       *SwapText-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim SwapText*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES					       *SwapText-dependencies*

- Requires Vim 7.0 or higher.
- Requires the |ingo-library.vim| plugin (vimscript #4433), version 1.005 or
  higher.

==============================================================================
LIMITATIONS						*SwapText-limitations*

- Unless :set virtualedit=all, swapping the last characters in a line will
  insert one character short of where the insert should be. This only
  happens when you swap FROM the last characters in a line to somewhere else.
  If you swap TO (in the natural left-to-right editing order) the last
  characters in a line, everythings works fine.

KNOWN PROBLEMS					     *SwapText-known-problems*

- Offset correction only works when the entire swap-to text is inside one
  line.

TODO							       *SwapText-todo*

IDEAS							      *SwapText-ideas*

==============================================================================
HISTORY							    *SwapText-history*

1.01	22-Jul-2014
- BUG: <Leader>X includes the newline unless :set selection=exclusive. Thanks
  to Enno Nagel for reporting this.

1.00	24-Jun-2014
First published version.

0.01	06-Jun-2007
Started development based on vimtip #470: Map to quickly swap/exchange
arbitrary text by Piet Delport and an enhancement by
ad_scriven@postmaster.co.uk.

==============================================================================
Copyright: (C) 2007-2014 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
